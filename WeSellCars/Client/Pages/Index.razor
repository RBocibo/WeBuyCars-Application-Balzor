@page "/"
@inject IMenuService MenuService
@inject IOrderService OrderService

@if (State.Menu.Cars.Any())
{
        <PageTitle>Index</PageTitle>

    <!--Car Menu-->

    <CarList 
        Title="Our Selection of cars" 
        Items="@State.Menu.Cars" 
        ButtonTitle="Order" 
        ButtonClass="btn btn-success" 
        Selected="@AddToCart">
    </CarList>

    <!--Car menu end-->

    <!--Shopping Cart-->

    <Cart 
        Orders="@State.Buy.Orders" 
        GetCarFromId="@State.Menu.GetCar" 
        Selected="@RemoveFromCart" 
        />

    <!--End Shopping cart-->

    <!--Customer entry-->

    <CustomerEntry 
        Title="Please enter your details below" 
        @bind-Customer="@State.Buy.Customer" 
        ButtonTitle="Checkout" 
        ButtonClass="mx-auto w-25 btn btn-success" 
        ValidSubmit="PlaceOrder">
    </CustomerEntry>

        <!--End Customer entry-->
    @State.ToJson()
}
else
{
    <div class="mx-auto text-center mb-3 mt-3">
        <div class="spinner-border text-danger" role="status">
        <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}

@code{
    private State State { get; } = new State();

    protected override async Task OnInitializedAsync()
    {
        Menu menu = await MenuService.GetMenu();

        foreach(Car car in menu.Cars)
        {
            State.Menu.AddCar(car);
        }
    }

    private void AddToCart(Car car)
    {
        State.Buy.Add(car.CarId);
    }

    private void RemoveFromCart(int pos)
    {
        State.Buy.RemoveAt(pos);
    }

    private async Task PlaceOrder()
    {
        await OrderService.PlaceOrder(State.Buy);
    }
}
