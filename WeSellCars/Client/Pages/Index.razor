@page "/"
<!-- Car Menu -->

<CarList Title="Our selection of cars"
           Menu="@State.Menu"
           Selected="@( async (car)
             => AddToBasket(car))"
           ShowCarInformation="ShowCarInformation" />

<!-- End Car menu -->
<!-- Shopping Cart -->

<Cart Title="Your current order"
                BuyNow="@State.Buy"
                GetCarFromId="@State.Menu.GetCar"
                Selected="@( (pos) => RemoveFromCart(pos))" />

<!-- End shopping Cart -->
<!-- Customer entry -->

<CustomerEntry Title="Please enter your details below"
               ButtonTitle="Checkout"
               ButtonClass="btn btn-primary"
               @bind-Customer="@State.Buy.Customer"
               Submit="@PlaceOrder" />

<!-- End customer entry -->

<p>@State.ToJson()</p>

@inject IMenuService menuService
@inject IOrderService orderService
@inject State State
@inject NavigationManager uriHelper

@code {

  // private State State { get; } = new State();

  protected override async Task OnInitializedAsync()
  {
    State.Menu = await menuService.GetMenu();
  }

  private void AddToBasket(Car car)
  {
    Console.WriteLine($"Added car {car.Name}");
    State.Buy.Add(car.CarId);
  }

  private void RemoveFromCart(int pos)
  {
    Console.WriteLine($"Removing car at pos {pos}");
    State.Buy.RemoveAt(pos);
  }

  private async Task PlaceOrder()
  {
    await orderService.PlaceOrder(State.Buy);
  }

  private void ShowCarInformation(Car selected)
  {
    //Console.WriteLine($"Selected: {selected.Name} - {this.State != null} -  {this.uriHelper != null}");
    this.State.CurrentCar = selected;

    Task.Run(() =>  this.uriHelper.NavigateTo("/carinfo"));
  }

}